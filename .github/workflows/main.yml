name: Deploy

on:
  push:
    branches:
      - main
      - 'release/**'
  release:
    types: [published] 

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_type == 'branch' && github.ref_name == 'main' && 'develop' || (startsWith(github.ref_name, 'release/') && 'staging' || 'production') }}
    defaults:
      run:
        working-directory: terraform
    steps:
    - uses: actions/checkout@v4
    - name: Determine environment and set variables
      id: set-vars
      run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "TF_VAR_region=${{ vars.REGION }}" >> $GITHUB_ENV
            echo "TF_VAR_short_region=${{ vars.SHORT_REGION }}" >> $GITHUB_ENV
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == release/* ]]; then
            echo "ENVIRONMENT=stg" >> $GITHUB_ENV
            echo "TF_VAR_region=${{ vars.REGION }}" >> $GITHUB_ENV
            echo "TF_VAR_short_region=${{ vars.SHORT_REGION }}" >> $GITHUB_ENV
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "TF_VAR_region=${{ vars.REGION }}" >> $GITHUB_ENV
            echo "TF_VAR_short_region=${{ vars.SHORT_REGION }}" >> $GITHUB_ENV
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          fi
    - name: Set TF VAR Environment
      id: set-env
      run: |
         echo "TF_VAR_env=$ENVIRONMENT" >> $GITHUB_ENV 
         echo "Environment set to: $TF_VAR_env"

    - name: Upgrade AWS CLI v2
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -q awscliv2.zip
        sudo ./aws/install --update
        /usr/local/bin/aws --version

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=terraform-state-test-cognito" \
          -backend-config="key=cognito-app-clients/$TF_VAR_env/terraform.tfstate" \
          -backend-config="region=$TF_VAR_region"

    - name: Terraform Plan
      run: |
        terraform plan \
          -var="env=$TF_VAR_env" \
          -var="region=$TF_VAR_region" \
          -out=plan.tfout

    - name: Terraform Apply
      run: terraform apply -auto-approve plan.tfout
